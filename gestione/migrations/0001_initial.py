# Generated by Django 5.2.4 on 2025-10-07 14:31

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import gestione.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_azienda', models.CharField(max_length=200, verbose_name='Nome Azienda')),
                ('responsabile', models.CharField(max_length=100, verbose_name='Responsabile')),
                ('telefono_responsabile', models.CharField(max_length=20, verbose_name='Tel. Responsabile')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('email2', models.EmailField(blank=True, max_length=254, verbose_name='Email 2')),
                ('note', models.TextField(blank=True, verbose_name='Note')),
                ('attivo', models.BooleanField(default=True, verbose_name='Attivo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True)),
                ('data_modifica', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clienti',
                'ordering': ['nome_azienda'],
            },
        ),
        migrations.CreateModel(
            name='Servizio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome servizio')),
                ('descrizione', models.TextField(blank=True, verbose_name='Descrizione')),
            ],
            options={
                'verbose_name': 'Servizio',
                'verbose_name_plural': 'Servizi',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='TipoComponente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('descrizione', models.TextField(blank=True, verbose_name='Descrizione')),
                ('intervallo_manutenzione_giorni', models.IntegerField(default=365, verbose_name='Intervallo Manutenzione (giorni)')),
            ],
            options={
                'verbose_name': 'Tipo Componente',
                'verbose_name_plural': 'Tipi Componente',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ruolo', models.CharField(choices=[('Administrator', 'Administrator'), ('Controlroom', 'Controlroom'), ('Operatore', 'Operatore')], default='Operatore', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cabina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome/Denominazione')),
                ('matricola', models.CharField(max_length=50, unique=True, verbose_name='Matricola')),
                ('fonte', models.CharField(blank=True, max_length=50, verbose_name='Fonte energetica')),
                ('guardiania', models.CharField(blank=True, max_length=100, verbose_name='Guardiania')),
                ('chiave', models.CharField(blank=True, max_length=50, verbose_name='N° Chiave')),
                ('pod', models.CharField(blank=True, max_length=50, verbose_name='POD')),
                ('telefono_guardiania', models.CharField(blank=True, max_length=20, verbose_name='Tel. Guardiania')),
                ('societa_proprietaria', models.CharField(blank=True, max_length=100, verbose_name='Società proprietaria')),
                ('latitudine', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='Latitudine')),
                ('longitudine', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='Longitudine')),
                ('attiva', models.BooleanField(default=True, verbose_name='Attiva')),
                ('note', models.TextField(blank=True, verbose_name='Note')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cabine', to='gestione.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Cabina',
                'verbose_name_plural': 'Cabine',
                'ordering': ['matricola'],
            },
        ),
        migrations.CreateModel(
            name='Componente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_installazione', models.DateField(blank=True, null=True, verbose_name='Data Installazione')),
                ('data_ultima_manutenzione', models.DateField(blank=True, null=True, verbose_name='Ultima Manutenzione')),
                ('attivo', models.BooleanField(default=True, verbose_name='Attivo')),
                ('note', models.TextField(blank=True, verbose_name='Note')),
                ('cabina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='componenti', to='gestione.cabina')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestione.tipocomponente')),
            ],
            options={
                'verbose_name': 'Componente',
                'verbose_name_plural': 'Componenti',
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=50)),
                ('scadenza', models.DateField()),
                ('silenziato', models.BooleanField(default=False)),
                ('posticipato_a', models.DateField(blank=True, null=True)),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('cabina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestione.cabina')),
                ('componente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestione.componente')),
            ],
        ),
        migrations.CreateModel(
            name='ManutenzioneProgrammata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('semestrale', 'Ordinaria Semestrale'), ('annuale', 'Ordinaria Annuale'), ('mensile', 'Mensile Lite'), ('spot', 'Spot / Extra')], default='semestrale', max_length=20)),
                ('data_programmata', models.DateField()),
                ('data_completamento', models.DateField(blank=True, null=True)),
                ('stato', models.CharField(choices=[('programmata', 'Programmata'), ('completata', 'Completata'), ('inviata', 'Inviata'), ('fatturata', 'Fatturata')], default='programmata', max_length=20)),
                ('note', models.TextField(blank=True)),
                ('data_creazione', models.DateTimeField(auto_now_add=True)),
                ('cabina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manutenzioni', to='gestione.cabina')),
                ('creata_da', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manutenzioni_create', to=settings.AUTH_USER_MODEL)),
                ('operatore', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Manutenzione Programmata',
                'verbose_name_plural': 'Manutenzioni Programmate',
                'ordering': ['data_completamento'],
            },
        ),
        migrations.CreateModel(
            name='PianoManutenzione',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('semestrale_annuale', 'Semestrale + Annuale'), ('annuale_only', 'Solo Annuale'), ('spot', 'Spot'), ('mensile_lite_annuale', 'Mensile Lite + Annuale')], max_length=50)),
                ('durata_contrattuale_mesi', models.PositiveIntegerField(blank=True, null=True, verbose_name='Durata contrattuale (mesi)')),
                ('cabina', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='piano_manutenzione', to='gestione.cabina')),
            ],
        ),
        migrations.CreateModel(
            name='ReportCompilato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema_snapshot', models.JSONField()),
                ('dati', models.JSONField(default=dict)),
                ('stato', models.CharField(choices=[('bozza', 'Bozza'), ('inviato', 'Inviato')], default='bozza', max_length=20)),
                ('compilato_il', models.DateTimeField(auto_now_add=True)),
                ('cabina', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestione.cabina')),
                ('compilato_da', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='report_compilati', to=settings.AUTH_USER_MODEL)),
                ('manutenzione', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='gestione.manutenzioneprogrammata')),
            ],
        ),
        migrations.CreateModel(
            name='ReportAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=100)),
                ('file', models.ImageField(upload_to=gestione.models.report_image_upload_to, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='gestione.reportcompilato')),
            ],
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('descrizione', models.TextField(blank=True)),
                ('frequenza', models.CharField(blank=True, max_length=20)),
                ('versione', models.PositiveIntegerField(default=1)),
                ('attivo', models.BooleanField(default=True)),
                ('schema', models.JSONField(default=dict)),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('creato_da', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='report_template_creati', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='reportcompilato',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestione.reporttemplate'),
        ),
        migrations.AddField(
            model_name='cabina',
            name='template_report',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cabine_assegnate', to='gestione.reporttemplate', verbose_name='Template report'),
        ),
        migrations.CreateModel(
            name='CabinaServizio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scadenza', models.DateField(verbose_name='Data scadenza')),
                ('cabina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servizi_assoc', to='gestione.cabina')),
                ('servizio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestione.servizio')),
            ],
            options={
                'verbose_name': 'Servizio assegnato',
                'verbose_name_plural': 'Servizi assegnati alle cabine',
                'unique_together': {('cabina', 'servizio')},
            },
        ),
    ]
